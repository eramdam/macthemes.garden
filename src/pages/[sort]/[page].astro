---
import { getCollection } from "astro:content";
import IndexPage from "../../components/IndexPage.astro";
import {
  PAGINATION,
  possibleSortSlugs,
  slugFromSortAndOrder,
  sortThemes,
} from "../../helpers";
import { getLikeCountsByThemeIds } from "../../helpers/dbHelpers";
import type { GetStaticPaths } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
  const themes = await getCollection("themes");
  const likesCountByID = await getLikeCountsByThemeIds();
  return possibleSortSlugs.flatMap((slug) => {
    const { order, sort } = slugFromSortAndOrder(slug);
    return paginate(
      sortThemes(
        themes.map((t) => {
          return { ...t, likes: likesCountByID[t.id] || 0 };
        }),
        sort,
        order
      ),
      {
        pageSize: PAGINATION.size,
        params: { sort: slug },
      }
    );
  });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
const { order, sort } = slugFromSortAndOrder(Astro.params.sort);
---

<IndexPage page={page} order={order} sort={sort} />
