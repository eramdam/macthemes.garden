---
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"a"> {}
const { ...attributes } = Astro.props;
---

<style lang="scss">
  @use "sass:math";
  :root {
    --scale: 1;

    --btn-border: black;
    --btn-text: var(--primary-black);
    --btn-background: var(--grays-300);
    --btn-bottom-right-shadow: #aaa;
    --btn-bottom-right-shadow2: #777;
    --btn-top-left-shadow: white;
    --btn-corners-shadow: #bbb;
    --btn-border-flourish: #222;
  }
  .button {
    display: inline-block;
    text-decoration: none;
  }

  .grid {
    display: grid;
    grid-template-areas:
      "... ... s01 s02 s02 s02 s03 ... ..."
      "... s04 s05 s06 s06 s06 s07 s08 ..."
      "s09 s10 s38 s11 s11 s11 s12 s13 s14"
      "s15 s16 s17 s17 bg1 bg1 s18 s19 s20"
      "s15 s16 s37 bg2 txt bg3 s18 s19 s20"
      "s15 s16 s37 bg2 bg4 s21 s18 s19 s20"
      "s22 s23 s24 s25 s26 s26 s27 s28 s29"
      "... s30 s31 s32 s32 s32 s32 s33 ..."
      "... ... s34 s35 s35 s35 s36 ... ...";
    grid-template-columns: repeat(4, max-content) 1fr repeat(5, max-content);
    grid-template-rows: repeat(4, max-content) 1fr repeat(4, max-content);
  }

  .shadow:is([data-n="19"], [data-n="32"], [data-n="27"], [data-n="28"]) {
    background-color: var(--btn-bottom-right-shadow2);
  }

  .shadow:is([data-n="11"], [data-n="17"], [data-n="37"], [data-n="38"]) {
    background-color: var(--btn-top-left-shadow);
  }

  .shadow:is([data-n="18"], [data-n="21"], [data-n="25"], [data-n="26"]) {
    background-color: var(--btn-bottom-right-shadow);
  }

  .shadow:is([data-n="24"]) {
    background-color: var(--btn-background);
  }

  .shadow:is([data-n="06"], [data-n="16"], [data-n="12"]) {
    background-color: var(--btn-background);
  }

  .shadow:is(
      [data-n="05"],
      [data-n="07"],
      [data-n="10"],
      [data-n="13"],
      [data-n="23"],
      [data-n="31"]
    ) {
    background-color: var(--btn-corners-shadow);
  }

  .shadow:is(
      [data-n="02"],
      [data-n="04"],
      [data-n="08"],
      [data-n="15"],
      [data-n="20"],
      [data-n="30"],
      [data-n="33"],
      [data-n="35"]
    ) {
    background-color: var(--btn-border);
  }

  .shadow:is(
      [data-n="01"],
      [data-n="03"],
      [data-n="09"],
      [data-n="14"],
      [data-n="22"],
      [data-n="29"],
      [data-n="34"],
      [data-n="36"]
    ) {
    background-color: var(--btn-border-flourish);
  }

  .button.active,
  .button:active,
  .button:focus {
    --btn-background: #666666;
    --btn-text: white;

    .shadow:is(
        [data-n="05"],
        [data-n="06"],
        [data-n="07"],
        [data-n="10"],
        [data-n="16"],
        [data-n="23"],
        [data-n="38"]
      ) {
      background-color: #444444;
    }
    .shadow:is([data-n="11"], [data-n="17"], [data-n="37"]) {
      background-color: #555555;
    }
    .shadow:is([data-n="12"], [data-n="24"]) {
      background-color: #666666;
    }
    .shadow:is(
        [data-n="13"],
        [data-n="25"],
        [data-n="26"],
        [data-n="21"],
        [data-n="18"],
        [data-n="31"]
      ) {
      background-color: #777777;
    }
    .shadow:is(
        [data-n="2d5"],
        [data-n="27"],
        [data-n="19"],
        [data-n="28"],
        [data-n="32"]
      ) {
      background-color: #888888;
    }
  }

  @for $i from 1 through 38 {
    $n: $i;
    @if $n < 10 {
      $n: "0#{$n}";
    }
    .shadow[data-n="#{$n}"] {
      grid-area: s#{$n};
    }
  }

  .shadow {
    min-width: calc(var(--scale) * 1px);
    min-height: calc(var(--scale) * 1px);
  }

  @for $i from 1 through 4 {
    .bgd[data-n="#{$i}"] {
      grid-area: bg#{$i};
    }
  }

  .bgd,
  .label {
    background-color: var(--btn-background);
  }
  .label {
    grid-area: txt;
    font-weight: bold;
    font-size: 0.625rem;
    padding: 2px 2px;
    line-height: 1em;
    color: var(--btn-text);
  }
</style>
<a class="button" {...attributes}>
  <div class="grid">
    {
      Array.from({ length: 38 }).map((_, index) => {
        return (
          <div class="shadow" data-n={String(index + 1).padStart(2, "0")} />
        );
      })
    }
    <div class="bgd" data-n="1"></div>
    <div class="bgd" data-n="2"></div>
    <div class="bgd" data-n="3"></div>
    <div class="bgd" data-n="4"></div>
    <div class="label">
      <slot />
    </div>
  </div>
</a>
