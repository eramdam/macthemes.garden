---
import { filter, isUndefined } from "lodash-es";
import crypto from "node:crypto";

export enum WindowButtons {
  Close,
  Zoom,
  Collapse,
}
interface Props {
  classname?: string;
  title: string;
  buttons?: WindowButtons[];
  asElement?: keyof astroHTML.JSX.DefinedIntrinsicElements;
}

const key = filter(
  [
    Astro.props.asElement || "div",
    Astro.props.classname,
    ...(Astro.props.buttons || []),
  ],
  (f) => !isUndefined(f)
).join("-");

const id = crypto
  .createHash("shake256", {
    outputLength: 4,
  })
  .update(key)
  .digest("hex");

const { classname, title } = Astro.props;
const buttons = Astro.props.buttons ?? [
  WindowButtons.Close,
  WindowButtons.Collapse,
  WindowButtons.Zoom,
];
const Wrapper = Astro.props.asElement ? Astro.props.asElement : "div";
---

<Wrapper id={id} class:list={["macos9-window", classname]}>
  <div class="macos9-window-titlebar">
    {
      buttons.includes(WindowButtons.Close) && (
        <button class="button close" data-action="close">
          <span class="button-dots" />
        </button>
      )
    }
    <span class="filler"></span>
    <span class="title-text">{title}</span>
    <span class="filler"></span>
    {
      buttons.includes(WindowButtons.Zoom) && (
        <button class="button zoom" data-action="zoom">
          <span class="button-dots" />
        </button>
      )
    }
    {
      buttons.includes(WindowButtons.Collapse) && (
        <button class="button collapse" data-action="collapse">
          <span class="button-dots" />
        </button>
      )
    }
  </div>
  <div class="macos9-window-body">
    <slot name="before-content" />
    <div class="macos9-window-mainbody platinum-scrollbars">
      <slot />
    </div>
    <slot name="after-content" />
  </div>
</Wrapper>
